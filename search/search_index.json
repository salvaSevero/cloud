{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome to MkDocs","text":""},{"location":"index.html#welcome-to-mkdocs","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"index.html#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"index.html#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"0_MaquinasContenedores.html","title":"Introducci\u00f3n","text":""},{"location":"0_MaquinasContenedores.html#maquinas-virtuales-y-contenedores","title":"M\u00e1quinas virtuales y Contenedores.","text":""},{"location":"0_MaquinasContenedores.html#que-es-la-virtualizacion","title":"\u00bfQu\u00e9 es la virtualizaci\u00f3n?","text":"<p>Permite reservar una serie de recursos del sistema (RAM, CPU, DISCO) para emular un sistema operativo (guest  / invitado) dentro de otro (host / anfitri\u00f3n).</p> <p>Ventajas:</p> <ul> <li>Podemos aprovechar mejor el hardware de la m\u00e1quina anfitriona, ya que estamos ejecutando varios \"ordenadores\" en uno mismo, aprovechando recursos que de otra forma es posible que no se llegaran a usar.</li> <li>Permite ejecutar software que quiz\u00e1 sea incompatible con tu sistema operativo anfitri\u00f3n, ya sea por un motivo de versiones o porque son sistemas operativos diferentes (Windows, Linux, MAC).</li> </ul>"},{"location":"0_MaquinasContenedores.html#que-es-un-hipervisor","title":"\u00bfQu\u00e9 es un Hipervisor?","text":"<p>El hipervisor es la parte software que permite crear y gestionar las m\u00e1quinas virtuales (asignar recursos, crear los discos virtuales, etc). </p> <p>Se distinguen dos tipos:</p> <p>Hipervisores de tipo 1 (hipervisores bare metal):</p> <ul> <li> <p>No necesitan de un sistema operativo anfitri\u00f3n para comunicarse con los componentes del ordenador, por tanto la comunicaci\u00f3n entre las m\u00e1quinas virtuales y los componentes es m\u00e1s directa, r\u00e1pida y eficiente. Es decir, si una m\u00e1quina virtual necesita hacer una operaci\u00f3n, se comunicar\u00e1 con el hipervisor y \u00e9ste con la CPU. </p> </li> <li> <p>Ejemplos: VMWare ESXi, KVM, Hyper-V</p> </li> </ul> <p>Hipervisores de tipo 2 (hipervisores alojados):</p> <ul> <li> <p>Son una aplicaci\u00f3n m\u00e1s del sistema operativo instalado en la m\u00e1quina y el hipervisor accede al hardware de la m\u00e1quina a trav\u00e9s de ese sistema operativo. Por tanto, si una m\u00e1quina virtual requiere hacer una operaci\u00f3n, pasar\u00e1 la orden al hipervisor, \u00e9ste al sistema operativo y de ah\u00ed a la CPU.</p> </li> <li> <p>Ejemplos: VirtualBox y VMWare Workstation.</p> </li> </ul>"},{"location":"0_MaquinasContenedores.html#que-es-un-contenedor","title":"\u00bfQu\u00e9 es un Contenedor?","text":"<ul> <li> <p>Los contenedores, a diferencia de las m\u00e1quinas virtuales, comparten el kernel, archivos binarios y librer\u00edas del sistema operativo (anfitri\u00f3n).</p> <p>\ud83d\udca5 Por tanto un host Linux podr\u00e1 crear contenedores relacionados con Linux, y un host Windows podr\u00e1 crear contenedores Windows.</p> </li> </ul> <p>NOTA</p> <ul> <li>Windows tiene la posibilidad de ejecutar contenedores Linux a trav\u00e9s del aislamiento de Hyper-V (WSL). </li> <li>B\u00e1sicamente activas un Kernel Linux en Windows y por tanto en Windows s\u00ed puedes generar contenedores de Linux.  </li> </ul> <ul> <li> <p>Cada contenedor ocupa mucho menos espacio, puesto que se ahorra todo los ficheros del sistema del sistema operativo que ahora recoge de la m\u00e1quina anfitriona.</p> </li> <li> <p>Su objetivo no es simular un sistema operativo completo, sino un servicio/aplicaci\u00f3n en concreto, por tanto aqu\u00ed tambi\u00e9n se produce un ahorro de espacio en disco.</p> <p>\ud83d\udca5 Aunque un \u00fanico contenedor puede emular varios servicios/aplicaciones es habitual tener varios contenedores y cada uno que tenga \u00fanicamente corriendo 1 servicio/  aplicaci\u00f3n y las dependencias que se necesitan para que \u00e9ste funcione.</p> </li> <li> <p>Arranca mucho m\u00e1s r\u00e1pido que una m\u00e1quina virtual, pues utiliza los procesos y ficheros del sistema del anfitri\u00f3n, el cual ya se encuentra arrancado.</p> </li> <li> <p>Docker es integrable con servicios en la nube:</p> <p>\ud83d\udca5 AWS (Amazon Web Service).</p> <p>\ud83d\udca5 Azure (Microsoft).</p> <p>\ud83d\udca5 Google Cloud.</p> </li> <li> <p>Docker es un software que permite la creaci\u00f3n y gesti\u00f3n de contenedores. </p> </li> </ul>"},{"location":"0_MaquinasContenedores.html#tipos-de-nubes","title":"Tipos de Nubes.","text":""},{"location":"1_ComandosDocker.html","title":"Docker","text":""},{"location":"1_ComandosDocker.html#comandos-basicos-en-docker","title":"Comandos B\u00e1sicos en Docker","text":""},{"location":"1_ComandosDocker.html#comandos","title":"Comandos.","text":"<p>Crear un contenedor</p> <p></p> \ud83d\udd25 docker [ run | start | stop | restart ] [OPCIONES] [contenedor] \ud83d\udd25  Argumentos  Funci\u00f3n  <code>run</code> Crea y arranca un contenedor --&gt; Si lo ejecutas varias veces ejecutas varios contenedores. <code>start | stop |restart</code> Arranca/Detiene/Reinicia un contenedor ya existente. <code>-d</code> Arranca en segundo plano. <code>-p</code> Traducci\u00f3n de puertos entre el contenedor y la m\u00e1quina anfitriona. Solo se puede hacer a la hora de crear la m\u00e1quina. <code>--name</code> Nombre de la m\u00e1quina. <code>-it</code> Redirige la salida al terminal del contenedor, es decir, accedes al terminal del contenedor. <p>Si nos fijamos en la salida vemos que lo primero que hace es buscar la imagen \u201chello-world\u201d en local, al no encontrarlo, lo descarga de un repositorio de docker y posteriormente lo ejecuta.  Si lo ejecut\u00e1is una segunda vez el c\u00f3digo ya se ejecutar\u00e1 directamente en local (/var/lib/docker/). Tambi\u00e9n podemos apreciar que la imagen que se carga es \u201chello-world:latest\u201d, es decir, la \u00faltima versi\u00f3n de la imagen del contenedor.</p> <p>Mostrar los contenedores del sistema, tanto parados como activos</p> <p></p> \ud83d\udd25 docker ps [opciones] \ud83d\udd25  <p>\u2728 Con \u2013a se muestran todos los contenedores, los activos y los detenidos.</p> <p>\u2728 Una vez sabemos su \u201cnombre\u201d o su \u201cID\u201d podemos arrancarlo/pararlo/reiniciarlo.</p> <p>Copiar o renombrar contenedores.</p> <p></p> \ud83d\udd25 docker [ cp |rename ] [contenedor] \ud83d\udd25  <p>Ejecutar comandos dentro del contenedor</p> <p></p> \ud83d\udd25 docker exec [OPCIONES] NombreContenedor Comando [ArgumentosComando] \ud83d\udd25  <p>\u2728 -d: Ejecuta en segundo plano.</p> <p>\u2728-it: Enlaza la entrada y salida a nuestro terminal. Es como entrar al terminal del contenedor.</p> <p>Acceder a los logs de ejecuci\u00f3n del contenedor.</p> <p></p> \ud83d\udd25 docker logs [OPCIONES] NombreContenedor \ud83d\udd25  <p>Listar todos los contenedores.</p> <p></p> \ud83d\udd25 docker container ls \u2013a \ud83d\udd25  <p>Eliminar un contenedor</p> <p></p> \ud83d\udd25 docker container rm NombreContenedor \ud83d\udd25  <p>\u2728 Elimina un contenedor.</p> <p>Crear una imagen a partir de un contenedor</p> <p></p> \ud83d\udd25 docker commit contenedor imagen \ud83d\udd25  <p>\u2728Crear una imagen de un contenedor es la forma m\u00e1s sencilla para subir nuestro contenedor a la nube o para hacer un backup local.</p>"},{"location":"1_ComandosDocker.html#ejemplos-basicos-en-docker","title":"Ejemplos B\u00e1sicos en Docker","text":"<p>Aviso</p> <p>En los siguientes ejemplos el nombre del contenedor ser\u00e1 Salva.</p> <ul> <li>Crear un contenedor nuevo con la \u00faltima versi\u00f3n de Ubuntu.</li> </ul> <pre><code>docker run -d -it --name Salva ubuntu\n</code></pre> <ul> <li>Acceder al contenedor haciendo uso del int\u00e9rprete /bin/bash.</li> </ul> <pre><code>docker exec -it Salva bash\n</code></pre> <ul> <li>Actualiza los repositorios e instala dentro del contendor.</li> </ul> <pre><code>apt-get update\napt-get install nano iputils-ping net-tools iproute2\n</code></pre> <ul> <li>Det\u00e9n el contenedor desde la m\u00e1quina anfitriona.</li> </ul> <pre><code>docker stop Salva\n</code></pre> <ul> <li>Arranca el contenedor.</li> </ul> <pre><code>docker start Salva\n</code></pre> <ul> <li>Descargar un fichero del contenedor a la m\u00e1quina anfitriona.</li> </ul> <pre><code>docker cp Salva:/home/prueba.txt .\n</code></pre> <ul> <li>Crear una imagen del contendor.</li> </ul> <pre><code>docker commit Salva copiaContendor\n</code></pre> <ul> <li>Lista las imagenes que tienes en el sistema</li> </ul> <pre><code>docker images\n</code></pre> <ul> <li>Crea un .tar de la imagen copiaContendor.</li> </ul> <pre><code>docker image save -o /home/usuario/backup.tar copiaContendor\n</code></pre> <ul> <li>Saca la imagen del .tar y vu\u00e9lcala en un contenedor. Recuerda estar en el mismo directorio que el .tar.</li> </ul> <pre><code>docker load -i backup.tar\ndocker run -d -it --name NuevoContenedor copiaContendor\n</code></pre>"},{"location":"1_ComandosDocker.html#como-trabajar-en-clasecasa-usando-docker","title":"\u00bfC\u00f3mo trabajar en clase/casa usando docker?","text":"<p>Muchos de vosotros hac\u00e9is uso de Windows en casa, por lo que os puede entrar dudas de c\u00f3mo podemos llevar nuestro trabajo a casa para seguir con \u00e9l.</p> <p>Existen dos opciones explicadas en los siguientes v\u00eddeos:</p> <ol> <li> <p>Guardarnos las im\u00e1genes en un USB.</p> </li> <li> <p>Subir las im\u00e1genes a Docker HUB..</p> </li> </ol>"},{"location":"2_Nubes.html","title":"La nube","text":""},{"location":"2_Nubes.html#computacion-en-la-nube","title":"Computaci\u00f3n en la Nube.","text":"<p>Entendemos por Computaci\u00f3n en la Nube hacer uso de infraestructura (almacenamiento, CPUS, RAM, ancho de banda) y servicios (bases de datos, firewalls, servicios DNS, ) de terceros para gestionar, bajo nuestra solicitud y pagando por uso.</p> <p>Esto permite:</p> <ul> <li> <p>Flexibilidad: Si necesito ampliar o reducir cualquier componente lo puedo hacer a trav\u00e9s de unos pocos clicks. Se paga por uso del servicio, por ejemplo pagaremos dependiendo del uso que hagamos del ancho de banda, o del tiempo que est\u00e9 la CPU encendida.</p> </li> <li> <p>Escalabilidad: Puedo aumentar la cantidad de servidores, balanceadores de carga en cualquier momento. No estoy limitado por falta de espacio f\u00edsico o por falta de stock al no haber previsto alg\u00fan acontecimiento.</p> </li> <li> <p>Centralizado: Se configura cualquier servicio, independientemente del tipo o de la localizaci\u00f3n desde la misma interfaz.</p> </li> </ul>"},{"location":"2_Nubes.html#modelos-y-servicios","title":"Modelos y Servicios.","text":"<ul> <li> <p>IaaS (Infraestructura como Servicio): Ofrece recursos f\u00edsisos (hardware) accesibles desde Internet como servidores (RAM, Disco, CPU) adem\u00e1s de la interconexi\u00f3n de red entre ellos.</p> </li> <li> <p>PaaS (Plataforma como Servicio):  Ofrece un entorno completo para el desarrollo, la ejecuci\u00f3n y la gesti\u00f3n de aplicaciones (Desarrollo Software). Es decir, ya no solo estamos contratando el hardware si no que tambi\u00e9n nos gestionan el tener instalado un sistema operativo, un entorno de programaci\u00f3n (IDE), las actualizaciones, los paquetes de programaci\u00f3n necesarias, el despliegue de la base de datos, etc.</p> </li> <li> <p>SaaS (Software como Servicio): Permite que el proveedor te despliegue y gestione (actualizaciones, correcci\u00f3n de errores, mantenimiento, ...) una aplicaci\u00f3n a la cual los clientes acceden normalmente mediante web o una API.</p> </li> </ul>"},{"location":"2_Nubes.html#tipos-de-nubes","title":"Tipos de Nubes.","text":""},{"location":"2_Nubes.html#nubes-publicas","title":"Nubes P\u00fablicas.","text":"<ul> <li> <p>Son las m\u00e1s extendidas.</p> </li> <li> <p>Los servidores son propiedad de terceros (Amazon, Microsoft, Google).</p> </li> <li> <p>Se accede a dichos recurso a trav\u00e9s de Internet (red p\u00fablica).</p> </li> <li> <p>Ejemplos: AWS, Azure, Google Cloud</p> </li> </ul> <p>Ventajas</p> <p>\ud83d\udca5 Inversi\u00f3n inicial es mejor al no tener que comprar el hardware y parte del software. </p> <p>\ud83d\udca5 En teor\u00eda pagas por lo que necesitas/usas.</p> <p>\ud83d\udca5 Es muy f\u00e1cilmente escalable, por ejemplo para aumentar la CPU, RAM, Almacenamiento, Ancho de Banda, etc.</p> <p>\ud83d\udca5 Te olvidas del mantenimiento de la infraestructura: Temperatura del CPD, coste y redundancia del sistema el\u00e9ctrico, mantenimiento del cableado, etc.</p> <p>\ud83d\udca5 El despliegue de aplicaciones y servicios es mucho m\u00e1s r\u00e1pido.</p> <p>Desventajas</p> <p>\ud83d\udca5 Si no controlas bien tus servidores o si no dise\u00f1as una buena arquitectura en la nube el coste se puede disparar.</p> <p>\ud83d\udca5 Necesitas de gente con conocimientos espec\u00edficos para un despliegue eficiente y adecuado.</p> <p>\ud83d\udca5 Los datos sensibles est\u00e1n almacenados en m\u00e1quinas que realmente no son propiedad de la empresa, incluso puede que se encuentren en otro pa\u00eds y no se rigan por las mismas normativas, por ejemplo no es la misma normativa de protecci\u00f3n de datos aqu\u00ed que en USA.</p>"},{"location":"2_Nubes.html#nubes-privadas","title":"Nubes Privadas.","text":"<ul> <li> <p>Todos los recursos est\u00e1n dedicados a un \u00fanica organizaci\u00f3n/empresa, estos recursos pueden estar alojados en un datacenter de la empresa o de un tercero.</p> </li> <li> <p>Se encuentran en una red privada.</p> </li> <li> <p>Suelen pertenecer a grandes organizaciones (gobiernos, bancos, etc) con necesidades muy espec\u00edficas sobre las cuales necesitan un control total.</p> </li> </ul> <p>Ventajas</p> <p>\ud83d\udca5 Mayor flexibilidad y control de los recursos. Al pertenecer a la empresa no se compartir\u00e1n recursos con terceros.</p> <p>\ud83d\udca5 Mayor escalabilidad en cuanto a que no dependemos de las limitaciones de terceros. Esto siempre ser\u00e1 bueno si nuestra organizaci\u00f3n tiene el poder econ\u00f3mico suficiente.</p> <p>Desventajas</p> <p>\ud83d\udca5 Mayor inversi\u00f3n inicial.</p> <p>\ud83d\udca5 Necesitas mucha m\u00e1s personal cualificado para el despliegue y mantenimiento de hardware/software.</p> <p>Se pueden desplegar nubes privadas virtuales en nubes p\u00fablicas.</p>"},{"location":"2_Nubes.html#nubes-hibridas","title":"Nubes H\u00edbridas.","text":"<p>Son aquellas organizaciones cuya parte de su l\u00f3gica de negocio se encuentra en una nube p\u00fablica y parte en una nube privada.</p>"},{"location":"2_Nubes.html#multicloud-networking","title":"MultiCloud Networking.","text":"<p>Se habla de MultiCloud cuando una misma organizaci\u00f3n tiene servicios alojadas en diferentes nubes p\u00fablicas, por ejemplo en AWS y Azure.</p> <p>Ventajas</p> <p>\ud83d\udca5 Puede aportar redundancia si hay alg\u00fan problema con una de las nubes p\u00fablicas.</p> <p>\ud83d\udca5 Puedes aprovecharte de las mejores innovaciones de una y otra.</p> <p>\ud83d\udca5 Puedes seleccionar los servicios m\u00e1s rentables econ\u00f3micamente de cada uno.</p> <p>Desventajas</p> <p>\ud83d\udca5 Necesitas gente con conocimientos de m\u00e1s de una nube p\u00fablica, lo que hace que la gesti\u00f3n pueda ser m\u00e1s complicada.</p>"}]}